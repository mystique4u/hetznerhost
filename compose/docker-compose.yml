version: '3.8'

services:
  nginx:
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    environment:
        CERTBOT_EMAIL: "mystique4u@gmail.com"
    ports:
      - 80:80
      - 443:443
    volumes:                                    
      - ./nginx/config/domains:/etc/nginx/user_conf.d
      - nginx_secrets:/etc/letsencrypt
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - postgres_odoo
      - odoo
    networks:
      - main-net


  # python-app:
  #   build:
  #     context: ./apps/app
  #     dockerfile: Dockerfile
  #   container_name: python-app
  #   restart: always
  #   ports:
  #     - "5000:5000"
  #   networks:
  #     - main-net
  
  # PostgreSQL for Odoo
  postgres_odoo:
    image: postgres:latest
    container_name: postgres_odoo
    environment:
      POSTGRES_USER: ${ODOO_DB_USER}
      POSTGRES_PASSWORD: ${ODOO_DB_PASSWORD}
      POSTGRES_DB: ${ODOO_DB_NAME}
      PGDATA: ${ODOO_DB_PGDATA}
    volumes:
      - ./db/odoo:/var/lib/postgresql/data/pgdata
      - ./db/postgresql.conf:/etc/postgresql.conf
      - ./db/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./db/postgres_data:/var/lib/postgresql/data
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5433:5432"  # Expose a different port to avoid conflicts
    networks:
      - main-net

  # Odoo Service
  odoo:
    image: odoo:latest
    container_name: odoo
    depends_on:
      - postgres_odoo
    environment:
      POSTGRES_HOST: postgres_odoo
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${ODOO_DB_USER}
      POSTGRES_PASSWORD: ${ODOO_DB_PASSWORD}
      POSTGRES_DB: ${ODOO_DB_NAME}
      PGDATA: ${ODOO_DB_PGDATA}
    ports:
      - "8069:8069"
    volumes:
      - ./odoo/odoo_data:/var/lib/odoo
      - ./odoo/config:/etc/odoo
      - ./odoo/addons:/mnt/extra-addons
    networks:
      - main-net

#   vaultwarden:
#     image: vaultwarden/server:latest
#     container_name: vaultwarden
#     restart: always
#     volumes:
#       - ./vaultwarden/config:/data
#     environment:
#       - WEB_VAULT_ENABLED=${VAULTWARDEN_WEB_VAULT_ENABLED}
#       - TZ=${TZ}
#     networks:
#       - main-net

#   wireguard:
#     image: linuxserver/wireguard:latest
#     container_name: wireguard
#     cap_add:
#       - NET_ADMIN
#       - SYS_MODULE
#     environment:
#       - PUID=${WIREGUARD_PUID}
#       - PGID=${WIREGUARD_PGID}
#       - TZ=${TZ}
#     volumes:
#       - ./wireguard/config:/config
#     ports:
#       - "51820:51820/udp"
#     sysctls:
#       - net.ipv4.ip_forward=1
#     networks:
#       - main-net

#   mailserver:
#     image: iredmail/mariadb:stable
#     container_name: mailserver
#     restart: always
#     env_file:
#       - .env
#     volumes:
#       - ./mailserver/data/backup-mysql:/var/vmail/backup/mysql
#       - ./mailserver/data/mailboxes:/var/vmail/vmail1
#       - ./mailserver/data/mlmmj:/var/vmail/mlmmj
#       - ./mailserver/data/mlmmj-archive:/var/vmail/mlmmj-archive
#       - ./mailserver/data/imapsieve_copy:/var/vmail/imapsieve_copy
#       - ./mailserver/data/custom:/opt/iredmail/custom
#       - ./mailserver/data/ssl:/opt/iredmail/ssl
#       - ./mailserver/data/mysql:/var/lib/mysql
#       - ./mailserver/data/clamav:/var/lib/clamav
#       - ./mailserver/data/sa_rules:/var/lib/spamassassin
#       - ./mailserver/data/postfix_queue:/var/spool/postfix
#     ports:
#       - "110:110"
#       - "995:995"
#       - "143:143"
#       - "993:993"
#       - "25:25"
#       - "465:465"
#       - "587:587"
#     networks:
#       - main-net

#   portainer:
#     image: portainer/portainer-ce:latest
#     ports:
#       - 9443:9443
#     volumes:
#         - portainer-data:/data
#         - /var/run/docker.sock:/var/run/docker.sock
#     restart: unless-stopped
#     networks:
#       - main-net

# volumes:
#   portainer-data:


volumes:
  nginx_secrets:

networks:
  main-net:
    driver: bridge
