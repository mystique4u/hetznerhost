version: '3.8'

services:
  nginx:
    image: jonasal/nginx-certbot:latest
    restart: unless-stopped
    environment:
      - CERTBOT_EMAIL
    env_file:
      - ./nginx/nginx-certbot.env
    ports:
      - 80:80
      - 443:443
    volumes:                                    
   #    - ./user_conf.d:/etc/nginx/user_conf.d
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/config/domains:/etc/nginx/domains
   #   - ./nginx/certs:/etc/letsencrypt
      - nginx_secrets:/etc/letsencrypt
      - ./nginx/logs:/var/log/nginx
      - ./nginx/webroot:/var/www/certbot
    depends_on:
      - python-app
    networks:
      - main-net
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   restart: always
  #   volumes:
  #     - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/config/domains:/etc/nginx/conf.d/domains
  #     - ./nginx/certs:/etc/letsencrypt
  #     - ./nginx/logs:/var/log/nginx
  #     - ./nginx/webroot:/var/www/certbot
  #   ports:
  #     - "80:80"
  #     - "443:443"

  #   depends_on:
  #     - python-app
  #   networks:
  #     - main-net

  # certbot:
  #   image: certbot/certbot:latest
  #   container_name: certbot
  #   restart: unless-stopped
  #   depends_on:
  #     - nginx
  #   volumes:
  #     - ./nginx/certs:/etc/letsencrypt
  #     - ./nginx/webroot:/var/www/certbot
  #     - ./nginx/config/domains:/etc/nginx/conf.d/domains
  #     - ./scripts:/scripts
  #   entrypoint: ["/bin/sh", "-c", "chmod +x /scripts/*.sh && /scripts/issue-certificates.sh 2>&1"]
  #   networks:
  #     - main-net

  # control:
  #   image: alpine:latest
  #   container_name: control
  #   restart: always
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - main-net

  python-app:
    build:
      context: ./apps/app
      dockerfile: Dockerfile
    container_name: python-app
    restart: always
    ports:
      - "5000:5000"
    networks:
      - main-net

#   vaultwarden:
#     image: vaultwarden/server:latest
#     container_name: vaultwarden
#     restart: always
#     volumes:
#       - ./vaultwarden/config:/data
#     environment:
#       - WEB_VAULT_ENABLED=${VAULTWARDEN_WEB_VAULT_ENABLED}
#       - TZ=${TZ}
#     networks:
#       - main-net

#   wireguard:
#     image: linuxserver/wireguard:latest
#     container_name: wireguard
#     cap_add:
#       - NET_ADMIN
#       - SYS_MODULE
#     environment:
#       - PUID=${WIREGUARD_PUID}
#       - PGID=${WIREGUARD_PGID}
#       - TZ=${TZ}
#     volumes:
#       - ./wireguard/config:/config
#     ports:
#       - "51820:51820/udp"
#     sysctls:
#       - net.ipv4.ip_forward=1
#     networks:
#       - main-net

#   mailserver:
#     image: iredmail/mariadb:stable
#     container_name: mailserver
#     restart: always
#     env_file:
#       - .env
#     volumes:
#       - ./mailserver/data/backup-mysql:/var/vmail/backup/mysql
#       - ./mailserver/data/mailboxes:/var/vmail/vmail1
#       - ./mailserver/data/mlmmj:/var/vmail/mlmmj
#       - ./mailserver/data/mlmmj-archive:/var/vmail/mlmmj-archive
#       - ./mailserver/data/imapsieve_copy:/var/vmail/imapsieve_copy
#       - ./mailserver/data/custom:/opt/iredmail/custom
#       - ./mailserver/data/ssl:/opt/iredmail/ssl
#       - ./mailserver/data/mysql:/var/lib/mysql
#       - ./mailserver/data/clamav:/var/lib/clamav
#       - ./mailserver/data/sa_rules:/var/lib/spamassassin
#       - ./mailserver/data/postfix_queue:/var/spool/postfix
#     ports:
#       - "110:110"
#       - "995:995"
#       - "143:143"
#       - "993:993"
#       - "25:25"
#       - "465:465"
#       - "587:587"
#     networks:
#       - main-net

#   portainer:
#     image: portainer/portainer-ce:latest
#     ports:
#       - 9443:9443
#     volumes:
#         - portainer-data:/data
#         - /var/run/docker.sock:/var/run/docker.sock
#     restart: unless-stopped
#     networks:
#       - main-net

# volumes:
#   portainer-data:


volumes:
  nginx_secrets:

networks:
  main-net:
    driver: bridge
