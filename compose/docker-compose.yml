version: '3.8'

services:
  # Existing Services
  # nginx:
  #   image: jonasal/nginx-certbot:latest
  #   restart: unless-stopped
  #   environment:
  #     CERTBOT_EMAIL: "mystique4u@gmail.com"
  #   ports:
  #     - "128.140.14.147:80:80"
  #     - "128.140.14.147:443:443"
  #   volumes:
  #     - ./nginx/config/domains:/etc/nginx/user_conf.d
  #     - nginx_secrets:/etc/letsencrypt
  #     - ./nginx/logs:/var/log/nginx
  #   depends_on:
  #     - postgres_odoo
  #     - odoo
  #     - front
  #   networks:
  #     - main-net
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/acme.json:/etc/traefik/acme.json
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "443:443"
    environment:
      - TZ=UTC
    labels:
      - "traefik.enable=true"
      # Traefik dashboard
      - "traefik.http.routers.api.rule=Host(`traefik.itin.dev`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_AUTH}"
      - "traefik.http.routers.api.middlewares=auth"
    networks:
      - main-net

  postgres_odoo:
    image: postgres:latest
    container_name: postgres_odoo
    environment:
      POSTGRES_USER: ${ODOO_DB_USER}
      POSTGRES_PASSWORD: ${ODOO_DB_PASSWORD}
      POSTGRES_DB: ${ODOO_DB_NAME}
      PGDATA: ${ODOO_DB_PGDATA}
    volumes:
      - ./db/postgres_data:/var/lib/postgresql/data
      - ./db/postgresql.conf:/etc/postgresql.conf
      - ./db/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c config_file=/etc/postgresql.conf
    restart: always
    ports:
      - "5433:5432"
    networks:
      - main-net

  odoo:
    image: odoo:latest
    container_name: odoo
    depends_on:
      - postgres_odoo
    environment:
      HOST: postgres_odoo
      USER: ${ODOO_DB_USER}
      PASSWORD: ${ODOO_DB_PASSWORD}
      POSTGRES_DB: ${ODOO_DB_NAME}
    restart: always
    tty: true
    command: --
    volumes:
      - ./odoo/odoo_data:/var/lib/odoo
      - ./odoo/config:/etc/odoo
      - ./odoo/addons:/mnt/extra-addons
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.odoo.rule=Host(`crm.itin.dev`)"
      - "traefik.http.routers.odoo.entrypoints=websecure"
      - "traefik.http.routers.odoo.tls.certresolver=letsencrypt"
      - "traefik.http.services.odoo.loadbalancer.server.port=8069"
    networks:
      - main-net

  # Mailu Services
  redis:
    container_name: mailu-redis
    image: redis:alpine
    restart: always
    volumes:
      - "./mailu/redis:/data"
    depends_on:
      - resolver
    dns:
      - 192.168.20.254
    networks:
      - main-net

  front:
    container_name: mailu-front
    image: ${DOCKER_ORG:-ghcr.io/mailu}/${DOCKER_PREFIX:-}nginx:${MAILU_VERSION:-2024.06}
    restart: always
    env_file: ".env"
    logging:
      driver: journald
      options:
        tag: mailu-front
    # Internal ports only, exposed via Traefik
    networks:
      - main-net
    volumes:
      - "./mailu/certs:/certs"
      - "./mailu/overrides/nginx:/overrides:ro"
    depends_on:
      - resolver
    dns:
      - 192.168.20.254
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailu.rule=Host(`mail.itin.dev`)"
      - "traefik.http.routers.mailu.entrypoints=websecure"
      - "traefik.http.routers.mailu.tls.certresolver=letsencrypt"
      - "traefik.http.services.mailu.loadbalancer.server.port=80"

  resolver:
    container_name: mailu-resolver
    image: ${DOCKER_ORG:-ghcr.io/mailu}/${DOCKER_PREFIX:-}unbound:${MAILU_VERSION:-2024.06}
    env_file: ".env"
    logging:
      driver: journald
      options:
        tag: mailu-resolver
    restart: always
    networks:
      main-net:
        ipv4_address: 192.168.20.254

  admin:
    container_name: mailu-admin
    image: ${DOCKER_ORG:-ghcr.io/mailu}/${DOCKER_PREFIX:-}admin:${MAILU_VERSION:-2024.06}
    restart: always
    env_file: ".env"
    logging:
      driver: journald
      options:
        tag: mailu-admin
    volumes:
      - "./mailu/data:/data"
      - "./mailu/dkim:/dkim"
    depends_on:
      - redis
      - resolver
    dns:
      - 192.168.20.254
    networks:
      - main-net

  imap:
    container_name: mailu-imap
    image: ${DOCKER_ORG:-ghcr.io/mailu}/${DOCKER_PREFIX:-}dovecot:${MAILU_VERSION:-2024.06}
    restart: always
    env_file: ".env"
    logging:
      driver: journald
      options:
        tag: mailu-imap
    volumes:
      - "./mailu/mail:/mail"
      - "./mailu/overrides/dovecot:/overrides:ro"
    networks:
      - main-net
    depends_on:
      - front
      - resolver
    dns:
      - 192.168.20.254

  smtp:
    container_name: mailu-smtp
    image: ${DOCKER_ORG:-ghcr.io/mailu}/${DOCKER_PREFIX:-}postfix:${MAILU_VERSION:-2024.06}
    restart: always
    env_file: ".env"
    logging:
      driver: journald
      options:
        tag: mailu-smtp
    volumes:
      - "./mailu/mailqueue:/queue"
      - "./mailu/overrides/postfix:/overrides:ro"
    networks:
      - main-net
    depends_on:
      - front
      - resolver
    dns:
      - 192.168.20.254

  webmail:
    container_name: mailu-webmail
    image: ${DOCKER_ORG:-ghcr.io/mailu}/${DOCKER_PREFIX:-}webmail:${MAILU_VERSION:-2024.06}
    restart: always
    env_file: ".env"
    logging:
      driver: journald
      options:
        tag: mailu-webmail
    volumes:
      - "./mailu/webmail:/data"
      - "./mailu/overrides/roundcube:/overrides:ro"
    networks:
      - main-net
    depends_on:
      - front

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    environment:
      - TZ=UTC
    labels:
      - "traefik.enable=true"
      # Traefik dashboard
      - "traefik.http.routers.portainer.rule=Host(`portainer.itin.dev`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_AUTH}"
      - "traefik.http.routers.portainer.middlewares=auth"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
    networks:
      - main-net

volumes:
  nginx_secrets:

networks:
  main-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24
