# HTTP redirect to HTTPS
server {
    listen 80;
    server_name vault.itin.dev www.vault.itin.dev;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server configuration for Vaultwarden
server {
    listen 443 ssl;
    server_name vault.itin.dev www.vault.itin.dev;

    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/vault.itin.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vault.itin.dev/privkey.pem;

    # SSL parameters (you can optimize these further for security)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers off;

    # Nginx access and error logs
    access_log /var/log/nginx/vault.itin.dev.access.log;
    error_log /var/log/nginx/vault.itin.dev.error.log;

    # Proxy to Vaultwarden (assuming Vaultwarden is exposed via internal Docker network)
    location / {
        proxy_pass http://vaultwarden:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
