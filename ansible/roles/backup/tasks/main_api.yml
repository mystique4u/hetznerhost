---
# Hetzner Storage Box API-based backup system
# Uses Hetzner Cloud API instead of SSH for reliable backup operations

- name: Create backup directory if it doesn't exist
  ansible.builtin.file:
    path: "{{ backup_path }}"
    state: directory
    mode: '0700'
    owner: "{{ sudo_user }}"
    group: "{{ sudo_user }}"
  tags: backup

- name: Install required packages for API access
  package:
    name:
      - curl
      - jq
    state: present
  tags: backup

- name: Debug storage box API configuration
  debug:
    msg:
      - "Storage box name: {{ storage_box_name }}"
      - "Hetzner API token: {{ hcloud_token[:10] }}..." # Show first 10 chars only
      - "Backup path: {{ backup_path }}"
      - "Target directory: {{ storage_box_target_dir }}"
  tags: backup

- name: Get storage box ID from Hetzner API
  uri:
    url: "https://api.hetzner.com/v1/storage_boxes"
    method: GET
    headers:
      Authorization: "Bearer {{ hcloud_token }}"
      Content-Type: "application/json"
    return_content: yes
  register: storage_boxes_response
  tags: backup

- name: Parse storage box ID
  set_fact:
    storage_box_id: "{{ (storage_boxes_response.json.storage_boxes | selectattr('name', 'equalto', storage_box_name) | first).id }}"
  when: storage_boxes_response.json.storage_boxes is defined
  tags: backup

- name: Debug storage box information
  debug:
    msg:
      - "Storage boxes found: {{ storage_boxes_response.json.storage_boxes | length }}"
      - "Storage box ID: {{ storage_box_id | default('NOT_FOUND') }}"
      - "Available storage boxes: {{ storage_boxes_response.json.storage_boxes | map(attribute='name') | list }}"
  tags: backup

- name: Fail if storage box not found
  fail:
    msg: "Storage box '{{ storage_box_name }}' not found. Available boxes: {{ storage_boxes_response.json.storage_boxes | map(attribute='name') | list }}"
  when: storage_box_id is not defined
  tags: backup

- name: Create backup archive
  archive:
    path: "{{ dev_home_path }}/"
    dest: "{{ backup_path }}/backup_$(date +'%Y%m%d%H%M%S').tar.gz"
    format: gz
  register: backup_archive
  tags: backup

- name: Debug backup archive creation
  debug:
    msg:
      - "Backup archive created: {{ backup_archive.archived | default('NO_FILES') }}"
      - "Archive path: {{ backup_archive.archive | default('NOT_CREATED') }}"
  tags: backup

- name: Upload backup to storage box via API
  uri:
    url: "https://api.hetzner.com/v1/storage_boxes/{{ storage_box_id }}/actions/upload"
    method: POST
    headers:
      Authorization: "Bearer {{ hcloud_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      source: "{{ backup_archive.archive }}"
      destination: "{{ storage_box_target_dir }}/{{ backup_archive.archive | basename }}"
  register: upload_response
  when: storage_box_id is defined and backup_archive.archive is defined
  tags: backup

- name: Debug upload response
  debug:
    msg: "Upload response: {{ upload_response.json | default('NO_RESPONSE') }}"
  when: upload_response is defined
  tags: backup

- name: Check upload status
  uri:
    url: "https://api.hetzner.com/v1/actions/{{ upload_response.json.action.id }}"
    method: GET
    headers:
      Authorization: "Bearer {{ hcloud_token }}"
    return_content: yes
  register: action_status
  when: upload_response is defined and upload_response.json.action.id is defined
  tags: backup

- name: Debug action status
  debug:
    msg:
      - "Action ID: {{ action_status.json.action.id | default('N/A') }}"
      - "Action status: {{ action_status.json.action.status | default('N/A') }}"
      - "Action progress: {{ action_status.json.action.progress | default('N/A') }}%"
  when: action_status is defined
  tags: backup

- name: Clean up old backups (keep last 7)
  find:
    paths: "{{ backup_path }}"
    patterns: "backup_*.tar.gz"
    age: "7d"
  register: old_backups
  tags: backup

- name: Remove old backup files
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ old_backups.files }}"
  when: old_backups.files is defined
  tags: backup

- name: Show backup completion status
  debug:
    msg: |
      Backup completed successfully!
      Archive: {{ backup_archive.archive | default('N/A') }}
      Upload action: {{ upload_response.json.action.id | default('N/A') }}
      Status: {{ action_status.json.action.status | default('N/A') }}
  when: upload_response is defined and action_status is defined
  tags: backup
