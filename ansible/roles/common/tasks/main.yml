---
# Update all packages
- name: Update all packages
  apt:
    update_cache: true
    upgrade: dist

# Install required packages
- name: Install required packages
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - curl
    - wget
    - git
    - build-essential
    - ca-certificates
    - gnupg
    - lsb-release
    - software-properties-common
    - mc
    - neovim
    - sshfs
    - rsync

# Enable IP forwarding for WireGuard VPN
- name: Enable IP forwarding for WireGuard VPN
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: true

- name: Ensure IP forwarding is persistent
  lineinfile:
    path: /etc/sysctl.conf
    regexp: "^net.ipv4.ip_forward"
    line: "net.ipv4.ip_forward=1"
    state: present

# Configure UFW firewall rules
- name: Allow necessary ports through the firewall
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: "{{ 'udp' if item == '51820' else 'tcp' }}"
  loop:
    - 80    # HTTP
    - 443   # HTTPS
    - 8080  # phpMyAdmin
    - 51820 # WireGuard VPN
    - 110   # POP3
    - 995   # POP3 Secure
    - 143   # IMAP
    - 993   # IMAP Secure
    - 25    # SMTP
    - 465   # SMTP Secure
    - 587   # Submission

- name: Ensure Storagebox SSH private key exists (via GitHub secret) and copy it
  copy:
    content: "{{ lookup('env', 'STORAGE_BOX_SSH_KEY') }}"
    dest: "{{ ssh_storagebox_pkey_path }}"
    mode: '0600'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Ensure SSH private key exists (via GitHub secret) and copy it
  copy:
    content: "{{ lookup('env', 'SSH_PRIVATE_KEY') }}"
    dest: "{{ ssh_private_key_path }}"
    mode: '0600'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"